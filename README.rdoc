= Rsubhak

==== Pronunciation
r sub hak

Recursively traverse a hash or array *ha*, searching for all occurrences of hash key *k*, and substituting (within their values) all occurrences of pattern *p* for replacement *r*.

==== Parameters
*ha*:: hash or array
*k*:: hash key
*p*:: pattern
*r*:: replacement

The point of inspiration for this gem was to sanitize the params hash,
so that no matter how deeply nested a *price* or *quantity* might be, one can among
other things, remove the currency sign and commas from a form input
(i.e. convert '$1,000.00' to '1000.00').
Though modifying price was the initial motivation,
you may use this gem to do any regex substitution to any hash key's value.

As this method is recursive, it can handle deeply nested hashes and arrays, starting from either (see test/).

= Examples

  irb> require 'rsubhak' => true 
  irb> params={"price"=>"$1,000.00", "nested"=>[{"id"=>"1", "price"=>"$150.00"}], "commit"=>"Save"}
  => {"price"=>"$1,000.00", "nested"=>[{"id"=>"1", "price"=>"$150.00"}], "commit"=>"Save"} 
  irb> Rsubhak.rsubhak(params, :price, /[\$,]/, '')
  => {"price"=>"1000.00", "nested"=>[{"id"=>"1", "price"=>"150.00"}], "commit"=>"Save"} 

To remove or strip any dollar sign or commas:

  Rsubhak.rsubhak(params, :price, /[\$,]/, '')

To remove the Euro sign and periods, and then convert commas to periods, thereby going from '€1.000,00' to '1000.00':

  Rsubhak.rsubhak(params, :price, /[€\.]/, '')
  Rsubhak.rsubhak(params, :price, /,/, '.')

To use it in your Rails project, first add this to your Gemfile:

  gem 'rsubhak', :git => 'git://github.com/abatko/rsubhak.git'

And then in your code, do something like:

  class YourModel < ActiveRecord::Base
    validates :price, numericality: {greater_than_or_equal_to: 0.01}
  end

  class YourController < ApplicationController
    before_filter :sanitize_params
    # ...
    protected
    def sanitize_params
      Rsubhak.rsubhak(params, :price, /[\$,]/, '') # remove $ and , (commas) from any :price in params
    end
  end

Note that the hash key may be a string or symbol.
